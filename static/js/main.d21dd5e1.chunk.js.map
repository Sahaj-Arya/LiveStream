{"version":3,"sources":["Video.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["mic","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","connections","peerConnectionConfig","iceServers","urls","socket","socketId","elms","Video","props","ccSubtitle","getPermissions","a","navigator","mediaDevices","getUserMedia","video","then","videoAvailable","catch","audio","audioAvailable","getDisplayMedia","setState","screenAvailable","stream","localStream","localVideoref","current","srcObject","e","console","log","getMedia","connectToSocketServer","state","getUserMediaSuccess","getTracks","forEach","track","stop","id","addStream","createOffer","description","setLocalDescription","emit","JSON","stringify","sdp","localDescription","onended","MediaStream","black","silence","blackSilence","getDislayMedia","screen","getDislayMediaSuccess","gotMessageFromServer","fromId","message","signal","parse","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","changeCssVideos","main","minWidth","offsetWidth","height","String","width","videos","querySelectorAll","length","style","minHeight","setProperty","io","connect","secure","on","location","href","addMessage","document","querySelector","parentNode","removeChild","getElementById","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","searchVidep","cssMesure","createElement","css","maxHeight","margin","borderStyle","borderColor","objectFit","i","setAttribute","autoplay","playsinline","appendChild","undefined","id2","ctx","AudioContext","oscillator","createOscillator","dst","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","canvas","getContext","fillRect","captureStream","getVideoTracks","handleVideo","handleAudio","handleScreen","handleEndCall","openChat","showModal","newmessages","closeChat","handleMessage","target","value","data","sender","socketIdSender","prevState","messages","handleUsername","username","sendMessage","note","sortedSubtitle","split","pop","copyUrl","text","clipboard","writeText","success","error","textArea","body","focus","select","execCommand","err","askForUsername","isChrome","userAgent","toLowerCase","vendor","test","match","React","createRef","isListening","subtitle","faker","internet","userName","this","interval","setInterval","clearInterval","background","padding","textAlign","marginTop","justifyContent","fontWeight","paddingRight","Input","placeholder","onChange","Button","variant","color","onClick","paddingTop","ref","autoPlay","muted","className","backgroundColor","IconButton","onend","onstart","onresult","transcript","Array","from","results","map","result","join","onerror","Badge","badgeContent","max","Modal","show","onHide","zIndex","Header","closeButton","Title","Body","overflow","overflowY","item","index","key","wordBreak","Footer","disable","marginLeft","fontSize","Row","Component","Home","handleChange","url","Math","random","toString","substring","marginBottom","App","path","exact","component","Boolean","hostname","ReactDOM","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d21dd5e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport faker from \"faker\";\r\n\r\nimport { IconButton, Badge, Input, Button } from \"@material-ui/core\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport VideocamOffIcon from \"@material-ui/icons/VideocamOff\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\r\nimport ScreenShareIcon from \"@material-ui/icons/ScreenShare\";\r\nimport StopScreenShareIcon from \"@material-ui/icons/StopScreenShare\";\r\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport ClosedCaptionOutlinedIcon from \"@material-ui/icons/ClosedCaptionOutlined\";\r\nimport ClosedCaptionIcon from \"@material-ui/icons/ClosedCaption\";\r\n\r\nimport { message } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Row } from \"reactstrap\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./Video.css\";\r\n\r\nconst SpeechRecognition =\r\n  window.SpeechRecognition || window.webkitSpeechRecognition;\r\nconst mic = new SpeechRecognition();\r\n\r\nmic.continuous = true;\r\nmic.interimResults = true;\r\nmic.lang = \"en-US\";\r\n\r\nconst server_url =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? \"https://video.sebastienbiollo.com\"\r\n    : \"http://localhost:4001\";\r\nvar connections = {};\r\nconst peerConnectionConfig = {\r\n  iceServers: [\r\n    { urls: \"stun:stun.services.mozilla.com\" },\r\n    { urls: \"stun:stun.l.google.com:19302\" },\r\n  ],\r\n};\r\nvar socket = null;\r\nvar socketId = null;\r\nvar elms = 0;\r\n\r\nclass Video extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.localVideoref = React.createRef();\r\n\r\n    this.videoAvailable = false;\r\n    this.audioAvailable = false;\r\n    // this.subtitleAvailable = false;\r\n\r\n    this.state = {\r\n      note: \"\",\r\n      sortedSubtitle: \"\",\r\n      isListening: false,\r\n\r\n      video: false,\r\n      audio: false,\r\n      screen: false,\r\n      subtitle: \"\",\r\n      showModal: false,\r\n      screenAvailable: false,\r\n      messages: [],\r\n      message: \"\",\r\n      newmessages: 0,\r\n      askForUsername: true,\r\n      username: faker.internet.userName(),\r\n    };\r\n    connections = {};\r\n\r\n    this.getPermissions();\r\n  }\r\n\r\n  ccSubtitle = () => {};\r\n\r\n  getPermissions = async () => {\r\n    try {\r\n      await navigator.mediaDevices\r\n        .getUserMedia({ video: true })\r\n        .then(() => (this.videoAvailable = true))\r\n        .catch(() => (this.videoAvailable = false));\r\n\r\n      await navigator.mediaDevices\r\n        .getUserMedia({ audio: true })\r\n        .then(() => (this.audioAvailable = true))\r\n        .catch(() => (this.audioAvailable = false));\r\n\r\n      if (navigator.mediaDevices.getDisplayMedia) {\r\n        this.setState({ screenAvailable: true });\r\n      } else {\r\n        this.setState({ screenAvailable: false });\r\n      }\r\n\r\n      if (this.videoAvailable || this.audioAvailable) {\r\n        navigator.mediaDevices\r\n          .getUserMedia({\r\n            video: this.videoAvailable,\r\n            audio: this.audioAvailable,\r\n          })\r\n          .then((stream) => {\r\n            window.localStream = stream;\r\n            this.localVideoref.current.srcObject = stream;\r\n          })\r\n          .then((stream) => {})\r\n          .catch((e) => console.log(e));\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  getMedia = () => {\r\n    this.setState(\r\n      {\r\n        video: this.videoAvailable,\r\n        audio: this.audioAvailable,\r\n      },\r\n      () => {\r\n        this.getUserMedia();\r\n        this.connectToSocketServer();\r\n      }\r\n    );\r\n  };\r\n\r\n  getUserMedia = () => {\r\n    if (\r\n      (this.state.video && this.videoAvailable) ||\r\n      (this.state.audio && this.audioAvailable)\r\n    ) {\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: this.state.video,\r\n          audio: this.state.audio,\r\n        })\r\n        .then(this.getUserMediaSuccess)\r\n        .then((stream) => {})\r\n        .catch((e) => console.log(e));\r\n    } else {\r\n      try {\r\n        let tracks = this.localVideoref.current.srcObject.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  getUserMediaSuccess = (stream) => {\r\n    try {\r\n      window.localStream.getTracks().forEach((track) => track.stop());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    window.localStream = stream;\r\n    this.localVideoref.current.srcObject = stream;\r\n\r\n    for (let id in connections) {\r\n      if (id === socketId) continue;\r\n\r\n      connections[id].addStream(window.localStream);\r\n\r\n      connections[id].createOffer().then((description) => {\r\n        connections[id]\r\n          .setLocalDescription(description)\r\n          .then(() => {\r\n            socket.emit(\r\n              \"signal\",\r\n              id,\r\n              JSON.stringify({ sdp: connections[id].localDescription })\r\n            );\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n    }\r\n\r\n    stream.getTracks().forEach(\r\n      (track) =>\r\n        (track.onended = () => {\r\n          this.setState(\r\n            {\r\n              video: false,\r\n              audio: false,\r\n              // subtitle:false,\r\n            },\r\n            () => {\r\n              try {\r\n                let tracks = this.localVideoref.current.srcObject.getTracks();\r\n                tracks.forEach((track) => track.stop());\r\n              } catch (e) {\r\n                console.log(e);\r\n              }\r\n\r\n              let blackSilence = (...args) =>\r\n                new MediaStream([this.black(...args), this.silence()]);\r\n              window.localStream = blackSilence();\r\n              this.localVideoref.current.srcObject = window.localStream;\r\n\r\n              for (let id in connections) {\r\n                connections[id].addStream(window.localStream);\r\n\r\n                connections[id].createOffer().then((description) => {\r\n                  connections[id]\r\n                    .setLocalDescription(description)\r\n                    .then(() => {\r\n                      socket.emit(\r\n                        \"signal\",\r\n                        id,\r\n                        JSON.stringify({\r\n                          sdp: connections[id].localDescription,\r\n                        })\r\n                      );\r\n                    })\r\n                    .catch((e) => console.log(e));\r\n                });\r\n              }\r\n            }\r\n          );\r\n        })\r\n    );\r\n  };\r\n\r\n  getDislayMedia = () => {\r\n    if (this.state.screen) {\r\n      if (navigator.mediaDevices.getDisplayMedia) {\r\n        navigator.mediaDevices\r\n          .getDisplayMedia({ video: true, audio: true })\r\n          .then(this.getDislayMediaSuccess)\r\n          .then((stream) => {})\r\n          .catch((e) => console.log(e));\r\n      }\r\n    }\r\n  };\r\n\r\n  getDislayMediaSuccess = (stream) => {\r\n    try {\r\n      window.localStream.getTracks().forEach((track) => track.stop());\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n\r\n    window.localStream = stream;\r\n    this.localVideoref.current.srcObject = stream;\r\n\r\n    for (let id in connections) {\r\n      if (id === socketId) continue;\r\n\r\n      connections[id].addStream(window.localStream);\r\n\r\n      connections[id].createOffer().then((description) => {\r\n        connections[id]\r\n          .setLocalDescription(description)\r\n          .then(() => {\r\n            socket.emit(\r\n              \"signal\",\r\n              id,\r\n              JSON.stringify({ sdp: connections[id].localDescription })\r\n            );\r\n          })\r\n          .catch((e) => console.log(e));\r\n      });\r\n    }\r\n\r\n    stream.getTracks().forEach(\r\n      (track) =>\r\n        (track.onended = () => {\r\n          this.setState(\r\n            {\r\n              screen: false,\r\n            },\r\n            () => {\r\n              try {\r\n                let tracks = this.localVideoref.current.srcObject.getTracks();\r\n                tracks.forEach((track) => track.stop());\r\n              } catch (e) {\r\n                console.log(e);\r\n              }\r\n\r\n              let blackSilence = (...args) =>\r\n                new MediaStream([this.black(...args), this.silence()]);\r\n              window.localStream = blackSilence();\r\n              this.localVideoref.current.srcObject = window.localStream;\r\n\r\n              this.getUserMedia();\r\n            }\r\n          );\r\n        })\r\n    );\r\n  };\r\n\r\n  gotMessageFromServer = (fromId, message) => {\r\n    var signal = JSON.parse(message);\r\n\r\n    if (fromId !== socketId) {\r\n      if (signal.sdp) {\r\n        connections[fromId]\r\n          .setRemoteDescription(new RTCSessionDescription(signal.sdp))\r\n          .then(() => {\r\n            if (signal.sdp.type === \"offer\") {\r\n              connections[fromId]\r\n                .createAnswer()\r\n                .then((description) => {\r\n                  connections[fromId]\r\n                    .setLocalDescription(description)\r\n                    .then(() => {\r\n                      socket.emit(\r\n                        \"signal\",\r\n                        fromId,\r\n                        JSON.stringify({\r\n                          sdp: connections[fromId].localDescription,\r\n                        })\r\n                      );\r\n                    })\r\n                    .catch((e) => console.log(e));\r\n                })\r\n                .catch((e) => console.log(e));\r\n            }\r\n          })\r\n          .catch((e) => console.log(e));\r\n      }\r\n\r\n      if (signal.ice) {\r\n        connections[fromId]\r\n          .addIceCandidate(new RTCIceCandidate(signal.ice))\r\n          .catch((e) => console.log(e));\r\n      }\r\n    }\r\n  };\r\n\r\n  changeCssVideos = (main) => {\r\n    let widthMain = main.offsetWidth;\r\n    let minWidth = \"30%\";\r\n    if ((widthMain * 30) / 100 < 300) {\r\n      minWidth = \"300px\";\r\n    }\r\n    let minHeight = \"40%\";\r\n\r\n    let height = String(100 / elms) + \"%\";\r\n    let width = \"\";\r\n    if (elms === 0 || elms === 1) {\r\n      width = \"100%\";\r\n      height = \"100%\";\r\n    } else if (elms === 2) {\r\n      width = \"45%\";\r\n      height = \"100%\";\r\n    } else if (elms === 3 || elms === 4) {\r\n      width = \"35%\";\r\n      height = \"50%\";\r\n    } else {\r\n      width = String(100 / elms) + \"%\";\r\n    }\r\n\r\n    let videos = main.querySelectorAll(\"video\");\r\n    for (let a = 0; a < videos.length; ++a) {\r\n      videos[a].style.minWidth = minWidth;\r\n      videos[a].style.minHeight = minHeight;\r\n      videos[a].style.setProperty(\"width\", width);\r\n      videos[a].style.setProperty(\"height\", height);\r\n    }\r\n\r\n    return { minWidth, minHeight, width, height };\r\n  };\r\n\r\n  connectToSocketServer = () => {\r\n    socket = io.connect(server_url, { secure: true });\r\n\r\n    socket.on(\"signal\", this.gotMessageFromServer);\r\n\r\n    socket.on(\"connect\", () => {\r\n      socket.emit(\"join-call\", window.location.href);\r\n      socketId = socket.id;\r\n\r\n      socket.on(\"chat-message\", this.addMessage);\r\n\r\n      socket.on(\"user-left\", (id) => {\r\n        let video = document.querySelector(`[data-socket=\"${id}\"]`);\r\n        if (video !== null) {\r\n          elms--;\r\n          video.parentNode.removeChild(video);\r\n\r\n          let main = document.getElementById(\"main\");\r\n          this.changeCssVideos(main);\r\n        }\r\n      });\r\n\r\n      socket.on(\"user-joined\", (id, clients) => {\r\n        clients.forEach((socketListId) => {\r\n          connections[socketListId] = new RTCPeerConnection(\r\n            peerConnectionConfig\r\n          );\r\n          // Wait for their ice candidate\r\n          connections[socketListId].onicecandidate = function (event) {\r\n            if (event.candidate != null) {\r\n              socket.emit(\r\n                \"signal\",\r\n                socketListId,\r\n                JSON.stringify({ ice: event.candidate })\r\n              );\r\n            }\r\n          };\r\n\r\n          // Wait for their video stream\r\n          connections[socketListId].onaddstream = (event) => {\r\n            // TODO mute button, full screen button\r\n            var searchVidep = document.querySelector(\r\n              `[data-socket=\"${socketListId}\"]`\r\n            );\r\n            if (searchVidep !== null) {\r\n              // if i don't do this check it make an empyt square\r\n              searchVidep.srcObject = event.stream;\r\n            } else {\r\n              elms = clients.length;\r\n              let main = document.getElementById(\"main\");\r\n              let cssMesure = this.changeCssVideos(main);\r\n\r\n              let video = document.createElement(\"video\");\r\n\r\n              let css = {\r\n                minWidth: cssMesure.minWidth,\r\n                minHeight: cssMesure.minHeight,\r\n                maxHeight: \"100%\",\r\n                margin: \"10px\",\r\n                borderStyle: \"solid\",\r\n                borderColor: \"#bdbdbd\",\r\n                objectFit: \"fill\",\r\n              };\r\n              for (let i in css) video.style[i] = css[i];\r\n\r\n              video.style.setProperty(\"width\", cssMesure.width);\r\n              video.style.setProperty(\"height\", cssMesure.height);\r\n              video.setAttribute(\"data-socket\", socketListId);\r\n              video.srcObject = event.stream;\r\n              video.autoplay = true;\r\n              video.playsinline = true;\r\n\r\n              main.appendChild(video);\r\n            }\r\n          };\r\n\r\n          // Add the local video stream\r\n          if (window.localStream !== undefined && window.localStream !== null) {\r\n            connections[socketListId].addStream(window.localStream);\r\n          } else {\r\n            let blackSilence = (...args) =>\r\n              new MediaStream([this.black(...args), this.silence()]);\r\n            window.localStream = blackSilence();\r\n            connections[socketListId].addStream(window.localStream);\r\n          }\r\n        });\r\n\r\n        if (id === socketId) {\r\n          for (let id2 in connections) {\r\n            if (id2 === socketId) continue;\r\n\r\n            try {\r\n              connections[id2].addStream(window.localStream);\r\n            } catch (e) {}\r\n\r\n            connections[id2].createOffer().then((description) => {\r\n              connections[id2]\r\n                .setLocalDescription(description)\r\n                .then(() => {\r\n                  socket.emit(\r\n                    \"signal\",\r\n                    id2,\r\n                    JSON.stringify({ sdp: connections[id2].localDescription })\r\n                  );\r\n                })\r\n                .catch((e) => console.log(e));\r\n            });\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n  silence = () => {\r\n    let ctx = new AudioContext();\r\n    let oscillator = ctx.createOscillator();\r\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\r\n    oscillator.start();\r\n    ctx.resume();\r\n    return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false });\r\n  };\r\n  black = ({ width = 640, height = 480 } = {}) => {\r\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\r\n      width,\r\n      height,\r\n    });\r\n    canvas.getContext(\"2d\").fillRect(0, 0, width, height);\r\n    let stream = canvas.captureStream();\r\n    return Object.assign(stream.getVideoTracks()[0], { enabled: false });\r\n  };\r\n\r\n  handleVideo = () =>\r\n    this.setState({ video: !this.state.video }, () => this.getUserMedia());\r\n  handleAudio = () =>\r\n    this.setState({ audio: !this.state.audio }, () => this.getUserMedia());\r\n\r\n  handleScreen = () =>\r\n    this.setState({ screen: !this.state.screen }, () => this.getDislayMedia());\r\n\r\n  handleEndCall = () => {\r\n    try {\r\n      let tracks = this.localVideoref.current.srcObject.getTracks();\r\n      tracks.forEach((track) => track.stop());\r\n    } catch (e) {}\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  openChat = () => this.setState({ showModal: true, newmessages: 0 });\r\n  closeChat = () => this.setState({ showModal: false });\r\n  handleMessage = (e) => this.setState({ message: e.target.value });\r\n\r\n  addMessage = (data, sender, socketIdSender) => {\r\n    this.setState((prevState) => ({\r\n      messages: [...prevState.messages, { sender: sender, data: data }],\r\n    }));\r\n    if (socketIdSender !== socketId) {\r\n      this.setState({ newmessages: this.state.newmessages + 1 });\r\n    }\r\n  };\r\n\r\n  handleUsername = (e) => this.setState({ username: e.target.value });\r\n\r\n  sendMessage = () => {\r\n    if (this.state.note) {\r\n      this.setState({\r\n        sortedSubtitle: this.state.sortedSubtitle.split(\".\").pop(),\r\n      });\r\n\r\n      // this.setState({\r\n      //       sortedSubtitle: this.state.note.replace(\r\n      //         this.state.sortedSubtitle.toString,\r\n      //         \"\"\r\n      //       ),\r\n      //     });\r\n\r\n      socket.emit(\r\n        \"chat-message\",\r\n        this.state.sortedSubtitle,\r\n        this.state.username\r\n      );\r\n      this.setState({ message: \"\", sender: this.state.username });\r\n      this.setState({ sortedSubtitle: \"\" });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.sendMessage, 10000);\r\n  }\r\n  componentWillUnmount() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  }\r\n  copyUrl = () => {\r\n    let text = window.location.href;\r\n    if (!navigator.clipboard) {\r\n      let textArea = document.createElement(\"textarea\");\r\n      textArea.value = text;\r\n      document.body.appendChild(textArea);\r\n      textArea.focus();\r\n      textArea.select();\r\n      try {\r\n        document.execCommand(\"copy\");\r\n        message.success(\"Link copied to clipboard!\");\r\n      } catch (err) {\r\n        message.error(\"Failed to copy\");\r\n      }\r\n      document.body.removeChild(textArea);\r\n      return;\r\n    }\r\n    navigator.clipboard.writeText(text).then(\r\n      function () {\r\n        message.success(\"Link copied to clipboard!\");\r\n      },\r\n      () => {\r\n        message.error(\"Failed to copy\");\r\n      }\r\n    );\r\n  };\r\n\r\n  connect = () =>\r\n    this.setState({ askForUsername: false }, () => this.getMedia());\r\n\r\n  isChrome = function () {\r\n    let userAgent = (navigator && (navigator.userAgent || \"\")).toLowerCase();\r\n    let vendor = (navigator && (navigator.vendor || \"\")).toLowerCase();\r\n    let matchChrome = /google inc/.test(vendor)\r\n      ? userAgent.match(/(?:chrome|crios)\\/(\\d+)/)\r\n      : null;\r\n    // let matchFirefox = userAgent.match(/(?:firefox|fxios)\\/(\\d+)/)\r\n    // return matchChrome !== null || matchFirefox !== null\r\n    return matchChrome !== null;\r\n  };\r\n\r\n  render() {\r\n    const handleListen = () => {\r\n      this.setState({ isListening: !this.state.isListening });\r\n\r\n      if (this.state.isListening) {\r\n        mic.start();\r\n        mic.onend = () => {\r\n          // console.log(\"continue..\");\r\n          mic.start();\r\n        };\r\n        // setIsActive(true);\r\n      } else {\r\n        mic.stop();\r\n        mic.onend = () => {\r\n          // console.log(\"Stopped Mic on Click\");\r\n        };\r\n        // setIsActive(false);\r\n      }\r\n      mic.onstart = () => {\r\n        console.log(\"Mics on\");\r\n      };\r\n\r\n      mic.onresult = (event) => {\r\n        const transcript = Array.from(event.results)\r\n          .map((result) => result[0])\r\n          .map((result) => result.transcript)\r\n          .join(\".\");\r\n        console.log(transcript);\r\n        this.setState({ note: transcript });\r\n\r\n        this.setState({ sortedSubtitle: this.state.note });\r\n\r\n        mic.onerror = (event) => {\r\n          console.log(event.error);\r\n        };\r\n      };\r\n      // if (this.state.note !== null && this.state.sortedSubtitle !== null) {\r\n      //   this.setState({\r\n      //     sortedSubtitle: this.state.note.replace(\r\n      //       this.state.sortedSubtitle,\r\n      //       \"\"\r\n      //     ),\r\n      //   });\r\n      // }\r\n      // this.sendMessage();\r\n    };\r\n\r\n    // if (this.state.note.length > 40) {\r\n    //   this.setState({ subtitle: this.state.note });\r\n    // } else {\r\n    // }\r\n    // if (this.state.note.length > 30) {\r\n    //   this.sendMessage();\r\n    // }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.askForUsername === true ? (\r\n          <div>\r\n            <div\r\n              style={{\r\n                background: \"white\",\r\n                width: \"30%\",\r\n                height: \"auto\",\r\n                padding: \"20px\",\r\n                minWidth: \"400px\",\r\n                textAlign: \"center\",\r\n                margin: \"auto\",\r\n                marginTop: \"50px\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              <p\r\n                style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}\r\n              >\r\n                Set your username\r\n              </p>\r\n              <Input\r\n                placeholder=\"Username\"\r\n                value={this.state.username}\r\n                onChange={(e) => this.handleUsername(e)}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={this.connect}\r\n                style={{ margin: \"20px\" }}\r\n              >\r\n                Connect\r\n              </Button>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                justifyContent: \"center\",\r\n                textAlign: \"center\",\r\n                paddingTop: \"40px\",\r\n              }}\r\n            >\r\n              <video\r\n                id=\"my-video\"\r\n                ref={this.localVideoref}\r\n                autoPlay\r\n                muted\r\n                style={{\r\n                  borderStyle: \"solid\",\r\n                  borderColor: \"#bdbdbd\",\r\n                  objectFit: \"fill\",\r\n                  width: \"60%\",\r\n                  height: \"30%\",\r\n                }}\r\n              ></video>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div\r\n              className=\"btn-down\"\r\n              style={{\r\n                backgroundColor: \"whitesmoke\",\r\n                color: \"whitesmoke\",\r\n                textAlign: \"center\",\r\n              }}\r\n            >\r\n              <IconButton\r\n                style={{ color: \"#424242\" }}\r\n                onClick={this.handleVideo}\r\n              >\r\n                {this.state.video === true ? (\r\n                  <VideocamIcon />\r\n                ) : (\r\n                  <VideocamOffIcon />\r\n                )}\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                style={{ color: \"#f44336\" }}\r\n                onClick={this.handleEndCall}\r\n              >\r\n                <CallEndIcon />\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                style={{ color: \"#424242\" }}\r\n                onClick={this.handleAudio}\r\n              >\r\n                {this.state.audio === true ? <MicIcon /> : <MicOffIcon />}\r\n              </IconButton>\r\n\r\n              {this.state.screenAvailable === true ? (\r\n                <IconButton\r\n                  style={{ color: \"#424242\" }}\r\n                  onClick={this.handleScreen}\r\n                >\r\n                  {this.state.screen === true ? (\r\n                    <ScreenShareIcon />\r\n                  ) : (\r\n                    <StopScreenShareIcon />\r\n                  )}\r\n                </IconButton>\r\n              ) : null}\r\n\r\n              <IconButton style={{ color: \"#424242\" }} onClick={handleListen}>\r\n                {this.state.isListening === true ? (\r\n                  <ClosedCaptionOutlinedIcon />\r\n                ) : (\r\n                  <ClosedCaptionIcon />\r\n                )}\r\n              </IconButton>\r\n\r\n              <Badge\r\n                badgeContent={this.state.newmessages}\r\n                max={999}\r\n                color=\"secondary\"\r\n                onClick={this.openChat}\r\n              >\r\n                <IconButton\r\n                  style={{ color: \"#424242\" }}\r\n                  onClick={this.openChat}\r\n                >\r\n                  <ChatIcon />\r\n                </IconButton>\r\n              </Badge>\r\n            </div>\r\n\r\n            <Modal\r\n              show={this.state.showModal}\r\n              onHide={this.closeChat}\r\n              style={{ zIndex: \"999999\" }}\r\n            >\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Chat Room</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body\r\n                style={{\r\n                  overflow: \"auto\",\r\n                  overflowY: \"auto\",\r\n                  height: \"400px\",\r\n                  textAlign: \"left\",\r\n                }}\r\n              >\r\n                {this.state.messages.length > 0 ? (\r\n                  this.state.messages.map((item, index) => (\r\n                    <div key={index} style={{ textAlign: \"left\" }}>\r\n                      <p style={{ wordBreak: \"break-all\" }}>\r\n                        <b>{item.sender}</b>: {item.data}\r\n                      </p>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <p>No message yet</p>\r\n                )}\r\n              </Modal.Body>\r\n              <Modal.Footer className=\"div-send-msg\">\r\n                <Input\r\n                  placeholder=\"Message\"\r\n                  value={this.state.sortedSubtitle}\r\n                  onChange={(e) => this.handleMessage(e)}\r\n                />\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.sendMessage}\r\n                >\r\n                  Send\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <div className=\"container\">\r\n              <div style={{ paddingTop: \"20px\" }}>\r\n                <Input value={window.location.href} disable=\"true\"></Input>\r\n                <Button\r\n                  style={{\r\n                    backgroundColor: \"#3f51b5\",\r\n                    color: \"whitesmoke\",\r\n                    marginLeft: \"20px\",\r\n                    marginTop: \"10px\",\r\n                    width: \"120px\",\r\n                    fontSize: \"10px\",\r\n                  }}\r\n                  onClick={this.copyUrl}\r\n                >\r\n                  Copy invite link\r\n                </Button>\r\n              </div>\r\n\r\n              {this.state.isListening ? (\r\n                <span>Translation Stopped</span>\r\n              ) : (\r\n                <span>Translating</span>\r\n              )}\r\n\r\n              {/* <button onClick={handleListen}>1212</button> */}\r\n\r\n              <div id=\"box\">\r\n                <p id=\"text1\" placeholder=\"TRANSLATION\">\r\n                  {this.state.note}\r\n                </p>\r\n              </div>\r\n\r\n              <Row\r\n                id=\"main\"\r\n                className=\"flex-container\"\r\n                style={{ margin: 0, padding: 0 }}\r\n              >\r\n                <video\r\n                  id=\"my-video\"\r\n                  ref={this.localVideoref}\r\n                  autoPlay\r\n                  muted\r\n                  style={{\r\n                    borderStyle: \"solid\",\r\n                    borderColor: \"#bdbdbd\",\r\n                    margin: \"10px\",\r\n                    objectFit: \"fill\",\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                  }}\r\n                ></video>\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Video;\r\n","import React, { Component } from 'react';\r\nimport { Input, Button, IconButton } from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport \"./Home.css\"\r\n\r\nclass Home extends Component {\r\n  \tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\turl: ''\r\n\t\t}\r\n\t}\r\n\r\n\thandleChange = (e) => this.setState({ url: e.target.value })\r\n\r\n\tjoin = () => {\r\n\t\tif (this.state.url !== \"\") {\r\n\t\t\tvar url = this.state.url.split(\"/\")\r\n\t\t\twindow.location.href = `/${url[url.length-1]}`\r\n\t\t} else {\r\n\t\t\tvar url = Math.random().toString(36).substring(2, 7)\r\n\t\t\twindow.location.href = `/${url}`\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"container2\">\r\n\t\t\t\t<div style={{fontSize: \"14px\", background: \"white\", width: \"10%\", textAlign: \"center\", margin: \"auto\", marginBottom: \"10px\"}}>\r\n\t\t\t\t\tSource code: \r\n\t\t\t\t\t<IconButton style={{color: \"black\"}} onClick={() => window.location.href=\"https://github.com/0x5eba/Video-Meeting\"}>\r\n\t\t\t\t\t\t<GitHubIcon />\r\n\t\t\t\t\t</IconButton>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1 style={{ fontSize: \"45px\" }}>Video Meeting</h1>\r\n\t\t\t\t\t<p style={{ fontWeight: \"200\" }}>Video conference website that lets you stay in touch with all your friends.</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\tbackground: \"white\", width: \"30%\", height: \"auto\", padding: \"20px\", minWidth: \"400px\",\r\n\t\t\t\t\ttextAlign: \"center\", margin: \"auto\", marginTop: \"100px\"\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<p style={{ margin: 0, fontWeight: \"bold\", paddingRight: \"50px\" }}>Start or join a meeting</p>\r\n\t\t\t\t\t<Input placeholder=\"URL\" onChange={e => this.handleChange(e)} />\r\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={this.join} style={{ margin: \"20px\" }}>Go</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport Video from \"./Video\";\r\nimport Home from \"./Home\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/home\" exact component={Home} />\r\n            <Route path=\"/:url\" component={Video} />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === 'localhost' ||\r\n\t// [::1] is the IPv6 localhost address.\r\n\twindow.location.hostname === '[::1]' ||\r\n\t// 127.0.0.0/8 are considered localhost for IPv4.\r\n\twindow.location.hostname.match(\r\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n\t)\r\n);\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('load', () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\r\n\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Is not localhost. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing;\r\n\t\t\t\tif (installingWorker == null) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === 'installed') {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\r\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\r\n\t\t\t\t\t\t\t// content until all client tabs are closed.\r\n\t\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\r\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error('Error during service worker registration:', error);\r\n\t\t});\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl, {\r\n\t\theaders: { 'Service-Worker': 'script' },\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tconst contentType = response.headers.get('content-type');\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config);\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t'No internet connection found. App is running in offline mode.'\r\n\t\t\t);\r\n\t\t});\r\n}\r\n\r\nexport function unregister() {\r\n\tif ('serviceWorker' in navigator) {\r\n\t\tnavigator.serviceWorker.ready\r\n\t\t\t.then(registration => {\r\n\t\t\t\tregistration.unregister();\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error(error.message);\r\n\t\t\t});\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}